Description: This file used to create new networks
Parameters:
  VPCBlock:
    Type: String
    Default: "10.0.0.0/16"
  PrivateSubnetCidr1:
    Type: String   
  PrivateSubnetCidr2:
    Type: String
  PublicSubnetCidr1:
    Type: String   
  PublicSubnetCidr2:
    Type: String        

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCBlock
      EnableDnsHostnames: true
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PrivateSubnetCidr1
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: PrivateSubnet1
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref PrivateSubnetCidr2
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: PrivateSubnet2
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PublicSubnetCidr1
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: PublicSubnet1
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref PublicSubnetCidr2
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: PublicSubnet2
  InternetGW:
    Type: AWS::EC2::InternetGateway
  InternetGWAattach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGW
      VpcId: !Ref VPC
  EIP1:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: vpc
  EIP2:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: vpc        
  NATGateway1:
    Type: AWS::EC2::NatGateway
    DependsOn: EIP1
    Properties: 
      SubnetId: !Ref PublicSubnet1
      ConnectivityType: public
      AllocationId: !GetAtt EIP1.AllocationId
  NATGateway2:
    Type: AWS::EC2::NatGateway
    DependsOn: EIP2
    Properties: 
      SubnetId: !Ref PublicSubnet2
      ConnectivityType: public
      AllocationId: !GetAtt EIP2.AllocationId

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
  DefaultPublicRoute: 
      Type: AWS::EC2::Route
      DependsOn: InternetGWAattach
      Properties: 
          RouteTableId: !Ref PublicRouteTable
          DestinationCidrBlock: 0.0.0.0/0
          GatewayId: !Ref InternetGW
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
  DefaultPrivateRoute: 
      Type: AWS::EC2::Route
      DependsOn: NATGateway1
      Properties: 
          RouteTableId: !Ref PrivateRouteTable
          DestinationCidrBlock: 0.0.0.0/0
          NatGatewayId: !Ref NATGateway1       
  PublicSubnet1RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PublicRouteTable
          SubnetId: !Ref PublicSubnet1        
  PublicSubnet2RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PublicRouteTable
          SubnetId: !Ref PublicSubnet2
  PrivateSubnet1RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PrivateRouteTable
          SubnetId: !Ref PrivateSubnet1        
  PrivateSubnet2RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PrivateRouteTable
          SubnetId: !Ref PrivateSubnet2        
Outputs:
  PublicSubnets:
    Description: List of Public Subnets
    Value: !Join [",",[!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: PubNets
  PrivateSubnets:
    Description: List of Private Subnets
    Value: !Join [",",[!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
    Export:
      Name: PrivNets
  VPC:
    Description: Created VPC ID
    Value: !Ref VPC
    Export:
      Name: udacityVPC        