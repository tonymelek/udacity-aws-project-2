Description: This file used to create new securitygroup, autoscaling group and elastic load balancer
Parameters:
  ImageId:
    Type: String
  InstanceType:
    Type: String   
  IamProfile:
    Type: String
  

Resources:
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http and ssh to client host and https,http out of client host
      GroupName: allow-ssh-http-ec2
      Tags:
        - Key: Name
          Value: ec2-ssh-http
      VpcId: !ImportValue udacityVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  
  Launcher:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties: 
      AssociatePublicIpAddress: true
      BlockDeviceMappings: 
        - DeviceName: "/dev/sdk"
          Ebs: 
            VolumeSize: 10
            VolumeType: "gp2"
            DeleteOnTermination: "true"
      ImageId: !Ref ImageId
      IamInstanceProfile: !Ref IamProfile
      InstanceMonitoring: true
      InstanceType: !Ref InstanceType
      KeyName: udacity-key-pair
      LaunchConfigurationName: Launcher
      SecurityGroups: 
        - !Ref InstanceSecurityGroup
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install apache2 -y
          apt-get install aws-cli -y
          systemctl start apache2.service
          aws s3 cp s3://project2-s3/index.html /var/www/html/index.html

  TargetGroup1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 5
      VpcId: !ImportValue udacityVPC
      Port: 80
      Protocol: HTTP

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      SecurityGroups: 
        - !Ref InstanceSecurityGroup
      Subnets: !Split [",", !ImportValue PubNets]

  AutoscalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      AutoScalingGroupName: ASG-01
      AvailabilityZones: 
        - !Select [0, !GetAZs '']
        - !Select [1, !GetAZs '']
      DesiredCapacity: '4'
      DesiredCapacityType: units
      HealthCheckGracePeriod: 2
      HealthCheckType: ELB
      LaunchConfigurationName: !Ref Launcher
      MaxSize: '5'
      MinSize: '1'
      NewInstancesProtectedFromScaleIn: false
      Tags: 
          - Key: Name
            Value: asg-01
            PropagateAtLaunch: false
      VPCZoneIdentifier: !Split [",", !ImportValue PrivNets]
      TargetGroupARNs: 
        - !Ref TargetGroup1
  
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref TargetGroup1
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup1
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref Listener
        Priority: 1
Outputs:
  ELB:
    Description: Elastic Load Balancer URL
    Value: !Join ["",["http://", !GetAtt LoadBalancer.DNSName]]
    Export:
      Name: ELBUrl        